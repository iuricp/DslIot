/*
 * generated by Xtext 2.25.0
 */
package org.xtext.example.iotdsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.iotdsl.ide.contentassist.antlr.internal.InternalIotDslParser;
import org.xtext.example.iotdsl.services.IotDslGrammarAccess;

public class IotDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(IotDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, IotDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getIotDslAccess().getGroup(), "rule__IotDsl__Group__0");
			builder.put(grammarAccess.getIotDslAccess().getGroup_1(), "rule__IotDsl__Group_1__0");
			builder.put(grammarAccess.getIotDslAccess().getGroup_2(), "rule__IotDsl__Group_2__0");
			builder.put(grammarAccess.getIotDslAccess().getGroup_3(), "rule__IotDsl__Group_3__0");
			builder.put(grammarAccess.getEstadoAccess().getGroup(), "rule__Estado__Group__0");
			builder.put(grammarAccess.getEstadoAccess().getGroup_2(), "rule__Estado__Group_2__0");
			builder.put(grammarAccess.getTransacaoAccess().getGroup(), "rule__Transacao__Group__0");
			builder.put(grammarAccess.getIotDslAccess().getEventosAssignment_1_1(), "rule__IotDsl__EventosAssignment_1_1");
			builder.put(grammarAccess.getIotDslAccess().getResetEventosAssignment_2_1(), "rule__IotDsl__ResetEventosAssignment_2_1");
			builder.put(grammarAccess.getIotDslAccess().getComandosAssignment_3_1(), "rule__IotDsl__ComandosAssignment_3_1");
			builder.put(grammarAccess.getIotDslAccess().getEstadosAssignment_4(), "rule__IotDsl__EstadosAssignment_4");
			builder.put(grammarAccess.getEventoAccess().getNameAssignment(), "rule__Evento__NameAssignment");
			builder.put(grammarAccess.getComandoAccess().getNameAssignment(), "rule__Comando__NameAssignment");
			builder.put(grammarAccess.getEstadoAccess().getNameAssignment_1(), "rule__Estado__NameAssignment_1");
			builder.put(grammarAccess.getEstadoAccess().getAcoesAssignment_2_2(), "rule__Estado__AcoesAssignment_2_2");
			builder.put(grammarAccess.getEstadoAccess().getTransacoesAssignment_3(), "rule__Estado__TransacoesAssignment_3");
			builder.put(grammarAccess.getTransacaoAccess().getEventoAssignment_0(), "rule__Transacao__EventoAssignment_0");
			builder.put(grammarAccess.getTransacaoAccess().getEstadoAssignment_2(), "rule__Transacao__EstadoAssignment_2");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private IotDslGrammarAccess grammarAccess;

	@Override
	protected InternalIotDslParser createParser() {
		InternalIotDslParser result = new InternalIotDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public IotDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(IotDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
