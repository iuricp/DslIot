/*
 * generated by Xtext 2.25.0
 */
package org.xtext.example.iotdsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class IotDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class IotDslElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.iotdsl.IotDsl.IotDsl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIotDslAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cEventosKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cEventosAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cEventosEventoParserRuleCall_1_1_0 = (RuleCall)cEventosAssignment_1_1.eContents().get(0);
		private final Keyword cEndKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cResetEventosKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cResetEventosAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cResetEventosEventoCrossReference_2_1_0 = (CrossReference)cResetEventosAssignment_2_1.eContents().get(0);
		private final RuleCall cResetEventosEventoIDTerminalRuleCall_2_1_0_1 = (RuleCall)cResetEventosEventoCrossReference_2_1_0.eContents().get(1);
		private final Keyword cEndKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cComandosKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cComandosAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cComandosComandoParserRuleCall_3_1_0 = (RuleCall)cComandosAssignment_3_1.eContents().get(0);
		private final Keyword cEndKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cEstadosAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cEstadosEstadoParserRuleCall_4_0 = (RuleCall)cEstadosAssignment_4.eContents().get(0);
		
		//IotDsl:
		//    {IotDsl}
		//    ('eventos' eventos+=Evento+
		//    'end')?
		//    ('resetEventos' (resetEventos+=[Evento])+
		//    'end')?
		//    ('comandos' (comandos+=Comando)+
		//    'end')?
		//    estados+=Estado*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{IotDsl}
		//('eventos' eventos+=Evento+
		//'end')?
		//('resetEventos' (resetEventos+=[Evento])+
		//'end')?
		//('comandos' (comandos+=Comando)+
		//'end')?
		//estados+=Estado*
		public Group getGroup() { return cGroup; }
		
		//{IotDsl}
		public Action getIotDslAction_0() { return cIotDslAction_0; }
		
		//('eventos' eventos+=Evento+
		//'end')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'eventos'
		public Keyword getEventosKeyword_1_0() { return cEventosKeyword_1_0; }
		
		//eventos+=Evento+
		public Assignment getEventosAssignment_1_1() { return cEventosAssignment_1_1; }
		
		//Evento
		public RuleCall getEventosEventoParserRuleCall_1_1_0() { return cEventosEventoParserRuleCall_1_1_0; }
		
		//'end'
		public Keyword getEndKeyword_1_2() { return cEndKeyword_1_2; }
		
		//('resetEventos' (resetEventos+=[Evento])+
		//'end')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'resetEventos'
		public Keyword getResetEventosKeyword_2_0() { return cResetEventosKeyword_2_0; }
		
		//(resetEventos+=[Evento])+
		public Assignment getResetEventosAssignment_2_1() { return cResetEventosAssignment_2_1; }
		
		//[Evento]
		public CrossReference getResetEventosEventoCrossReference_2_1_0() { return cResetEventosEventoCrossReference_2_1_0; }
		
		//ID
		public RuleCall getResetEventosEventoIDTerminalRuleCall_2_1_0_1() { return cResetEventosEventoIDTerminalRuleCall_2_1_0_1; }
		
		//'end'
		public Keyword getEndKeyword_2_2() { return cEndKeyword_2_2; }
		
		//('comandos' (comandos+=Comando)+
		//'end')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'comandos'
		public Keyword getComandosKeyword_3_0() { return cComandosKeyword_3_0; }
		
		//(comandos+=Comando)+
		public Assignment getComandosAssignment_3_1() { return cComandosAssignment_3_1; }
		
		//Comando
		public RuleCall getComandosComandoParserRuleCall_3_1_0() { return cComandosComandoParserRuleCall_3_1_0; }
		
		//'end'
		public Keyword getEndKeyword_3_2() { return cEndKeyword_3_2; }
		
		//estados+=Estado*
		public Assignment getEstadosAssignment_4() { return cEstadosAssignment_4; }
		
		//Estado
		public RuleCall getEstadosEstadoParserRuleCall_4_0() { return cEstadosEstadoParserRuleCall_4_0; }
	}
	public class EventoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.iotdsl.IotDsl.Evento");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Evento:
		//  name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class ComandoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.iotdsl.IotDsl.Comando");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Comando:
		//  name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class EstadoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.iotdsl.IotDsl.Estado");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEstadoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cAcoesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cAcoesAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final CrossReference cAcoesComandoCrossReference_2_2_0 = (CrossReference)cAcoesAssignment_2_2.eContents().get(0);
		private final RuleCall cAcoesComandoIDTerminalRuleCall_2_2_0_1 = (RuleCall)cAcoesComandoCrossReference_2_2_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cTransacoesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTransacoesTransacaoParserRuleCall_3_0 = (RuleCall)cTransacoesAssignment_3.eContents().get(0);
		private final Keyword cEndKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Estado:
		//  'estado' name=ID
		//  ('acoes' '{' (acoes+=[Comando])+ '}')?
		//  (transacoes+=Transacao)*
		//  'end';
		@Override public ParserRule getRule() { return rule; }
		
		//'estado' name=ID
		//('acoes' '{' (acoes+=[Comando])+ '}')?
		//(transacoes+=Transacao)*
		//'end'
		public Group getGroup() { return cGroup; }
		
		//'estado'
		public Keyword getEstadoKeyword_0() { return cEstadoKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('acoes' '{' (acoes+=[Comando])+ '}')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'acoes'
		public Keyword getAcoesKeyword_2_0() { return cAcoesKeyword_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_1() { return cLeftCurlyBracketKeyword_2_1; }
		
		//(acoes+=[Comando])+
		public Assignment getAcoesAssignment_2_2() { return cAcoesAssignment_2_2; }
		
		//[Comando]
		public CrossReference getAcoesComandoCrossReference_2_2_0() { return cAcoesComandoCrossReference_2_2_0; }
		
		//ID
		public RuleCall getAcoesComandoIDTerminalRuleCall_2_2_0_1() { return cAcoesComandoIDTerminalRuleCall_2_2_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_3() { return cRightCurlyBracketKeyword_2_3; }
		
		//(transacoes+=Transacao)*
		public Assignment getTransacoesAssignment_3() { return cTransacoesAssignment_3; }
		
		//Transacao
		public RuleCall getTransacoesTransacaoParserRuleCall_3_0() { return cTransacoesTransacaoParserRuleCall_3_0; }
		
		//'end'
		public Keyword getEndKeyword_4() { return cEndKeyword_4; }
	}
	public class TransacaoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.iotdsl.IotDsl.Transacao");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cEventoAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cEventoEventoCrossReference_0_0 = (CrossReference)cEventoAssignment_0.eContents().get(0);
		private final RuleCall cEventoEventoIDTerminalRuleCall_0_0_1 = (RuleCall)cEventoEventoCrossReference_0_0.eContents().get(1);
		private final Keyword cEqualsSignGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEstadoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cEstadoEstadoCrossReference_2_0 = (CrossReference)cEstadoAssignment_2.eContents().get(0);
		private final RuleCall cEstadoEstadoIDTerminalRuleCall_2_0_1 = (RuleCall)cEstadoEstadoCrossReference_2_0.eContents().get(1);
		
		//Transacao:
		//  evento=[Evento] '=>' estado=[Estado];
		@Override public ParserRule getRule() { return rule; }
		
		//evento=[Evento] '=>' estado=[Estado]
		public Group getGroup() { return cGroup; }
		
		//evento=[Evento]
		public Assignment getEventoAssignment_0() { return cEventoAssignment_0; }
		
		//[Evento]
		public CrossReference getEventoEventoCrossReference_0_0() { return cEventoEventoCrossReference_0_0; }
		
		//ID
		public RuleCall getEventoEventoIDTerminalRuleCall_0_0_1() { return cEventoEventoIDTerminalRuleCall_0_0_1; }
		
		//'=>'
		public Keyword getEqualsSignGreaterThanSignKeyword_1() { return cEqualsSignGreaterThanSignKeyword_1; }
		
		//estado=[Estado]
		public Assignment getEstadoAssignment_2() { return cEstadoAssignment_2; }
		
		//[Estado]
		public CrossReference getEstadoEstadoCrossReference_2_0() { return cEstadoEstadoCrossReference_2_0; }
		
		//ID
		public RuleCall getEstadoEstadoIDTerminalRuleCall_2_0_1() { return cEstadoEstadoIDTerminalRuleCall_2_0_1; }
	}
	
	
	private final IotDslElements pIotDsl;
	private final EventoElements pEvento;
	private final ComandoElements pComando;
	private final EstadoElements pEstado;
	private final TransacaoElements pTransacao;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public IotDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pIotDsl = new IotDslElements();
		this.pEvento = new EventoElements();
		this.pComando = new ComandoElements();
		this.pEstado = new EstadoElements();
		this.pTransacao = new TransacaoElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.iotdsl.IotDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//IotDsl:
	//    {IotDsl}
	//    ('eventos' eventos+=Evento+
	//    'end')?
	//    ('resetEventos' (resetEventos+=[Evento])+
	//    'end')?
	//    ('comandos' (comandos+=Comando)+
	//    'end')?
	//    estados+=Estado*
	//;
	public IotDslElements getIotDslAccess() {
		return pIotDsl;
	}
	
	public ParserRule getIotDslRule() {
		return getIotDslAccess().getRule();
	}
	
	//Evento:
	//  name=ID;
	public EventoElements getEventoAccess() {
		return pEvento;
	}
	
	public ParserRule getEventoRule() {
		return getEventoAccess().getRule();
	}
	
	//Comando:
	//  name=ID;
	public ComandoElements getComandoAccess() {
		return pComando;
	}
	
	public ParserRule getComandoRule() {
		return getComandoAccess().getRule();
	}
	
	//Estado:
	//  'estado' name=ID
	//  ('acoes' '{' (acoes+=[Comando])+ '}')?
	//  (transacoes+=Transacao)*
	//  'end';
	public EstadoElements getEstadoAccess() {
		return pEstado;
	}
	
	public ParserRule getEstadoRule() {
		return getEstadoAccess().getRule();
	}
	
	//Transacao:
	//  evento=[Evento] '=>' estado=[Estado];
	public TransacaoElements getTransacaoAccess() {
		return pTransacao;
	}
	
	public ParserRule getTransacaoRule() {
		return getTransacaoAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
