/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.iotdsl.iotDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.EObjectResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.iotdsl.iotDsl.Comando;
import org.xtext.example.iotdsl.iotDsl.Estado;
import org.xtext.example.iotdsl.iotDsl.Evento;
import org.xtext.example.iotdsl.iotDsl.IotDsl;
import org.xtext.example.iotdsl.iotDsl.IotDslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Iot Dsl</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.iotdsl.iotDsl.impl.IotDslImpl#getEventos <em>Eventos</em>}</li>
 *   <li>{@link org.xtext.example.iotdsl.iotDsl.impl.IotDslImpl#getResetEventos <em>Reset Eventos</em>}</li>
 *   <li>{@link org.xtext.example.iotdsl.iotDsl.impl.IotDslImpl#getComandos <em>Comandos</em>}</li>
 *   <li>{@link org.xtext.example.iotdsl.iotDsl.impl.IotDslImpl#getEstados <em>Estados</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IotDslImpl extends MinimalEObjectImpl.Container implements IotDsl
{
  /**
   * The cached value of the '{@link #getEventos() <em>Eventos</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEventos()
   * @generated
   * @ordered
   */
  protected EList<Evento> eventos;

  /**
   * The cached value of the '{@link #getResetEventos() <em>Reset Eventos</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getResetEventos()
   * @generated
   * @ordered
   */
  protected EList<Evento> resetEventos;

  /**
   * The cached value of the '{@link #getComandos() <em>Comandos</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComandos()
   * @generated
   * @ordered
   */
  protected EList<Comando> comandos;

  /**
   * The cached value of the '{@link #getEstados() <em>Estados</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEstados()
   * @generated
   * @ordered
   */
  protected EList<Estado> estados;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IotDslImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return IotDslPackage.Literals.IOT_DSL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Evento> getEventos()
  {
    if (eventos == null)
    {
      eventos = new EObjectContainmentEList<Evento>(Evento.class, this, IotDslPackage.IOT_DSL__EVENTOS);
    }
    return eventos;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Evento> getResetEventos()
  {
    if (resetEventos == null)
    {
      resetEventos = new EObjectResolvingEList<Evento>(Evento.class, this, IotDslPackage.IOT_DSL__RESET_EVENTOS);
    }
    return resetEventos;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Comando> getComandos()
  {
    if (comandos == null)
    {
      comandos = new EObjectContainmentEList<Comando>(Comando.class, this, IotDslPackage.IOT_DSL__COMANDOS);
    }
    return comandos;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Estado> getEstados()
  {
    if (estados == null)
    {
      estados = new EObjectContainmentEList<Estado>(Estado.class, this, IotDslPackage.IOT_DSL__ESTADOS);
    }
    return estados;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case IotDslPackage.IOT_DSL__EVENTOS:
        return ((InternalEList<?>)getEventos()).basicRemove(otherEnd, msgs);
      case IotDslPackage.IOT_DSL__COMANDOS:
        return ((InternalEList<?>)getComandos()).basicRemove(otherEnd, msgs);
      case IotDslPackage.IOT_DSL__ESTADOS:
        return ((InternalEList<?>)getEstados()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case IotDslPackage.IOT_DSL__EVENTOS:
        return getEventos();
      case IotDslPackage.IOT_DSL__RESET_EVENTOS:
        return getResetEventos();
      case IotDslPackage.IOT_DSL__COMANDOS:
        return getComandos();
      case IotDslPackage.IOT_DSL__ESTADOS:
        return getEstados();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case IotDslPackage.IOT_DSL__EVENTOS:
        getEventos().clear();
        getEventos().addAll((Collection<? extends Evento>)newValue);
        return;
      case IotDslPackage.IOT_DSL__RESET_EVENTOS:
        getResetEventos().clear();
        getResetEventos().addAll((Collection<? extends Evento>)newValue);
        return;
      case IotDslPackage.IOT_DSL__COMANDOS:
        getComandos().clear();
        getComandos().addAll((Collection<? extends Comando>)newValue);
        return;
      case IotDslPackage.IOT_DSL__ESTADOS:
        getEstados().clear();
        getEstados().addAll((Collection<? extends Estado>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case IotDslPackage.IOT_DSL__EVENTOS:
        getEventos().clear();
        return;
      case IotDslPackage.IOT_DSL__RESET_EVENTOS:
        getResetEventos().clear();
        return;
      case IotDslPackage.IOT_DSL__COMANDOS:
        getComandos().clear();
        return;
      case IotDslPackage.IOT_DSL__ESTADOS:
        getEstados().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case IotDslPackage.IOT_DSL__EVENTOS:
        return eventos != null && !eventos.isEmpty();
      case IotDslPackage.IOT_DSL__RESET_EVENTOS:
        return resetEventos != null && !resetEventos.isEmpty();
      case IotDslPackage.IOT_DSL__COMANDOS:
        return comandos != null && !comandos.isEmpty();
      case IotDslPackage.IOT_DSL__ESTADOS:
        return estados != null && !estados.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //IotDslImpl
